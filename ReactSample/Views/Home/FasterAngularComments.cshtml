@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AngComments</title>
    <style>
        div {
            margin-bottom: 10px;
            margin-left: 10px;
            margin-right: 10px;
        }
        /*.comment {
             background-color: aqua;
             border: 1px Solid grey;
             border-radius: 5px;
             margin-bottom: 5px;
             padding-left: 5px;
         }

         .comment .comment-header {
             font-weight: bold;
         }

         .comment .comment-body {
             text-indent: 5px;
         }*/
    </style>
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
</head>
<body>
    <div ng-app="myApp" ng-controller="commentsCtrl">
        <h1>
            Faster Angular for loading <span ng-bind="totalCommentCount"></span> records
        </h1>
        <div><a href="/Home">React Comments</a> | <a href="/Home/AngularComments">Angular Comments</a></div>

        <div>Record Count: <input type="text" ng-model="maxCommentCount" ng-blur="run()" /> <span ng-bind="status"></span></div>
        <span ng-bind="dataTime"></span>

        <fast-repeat data="comments"></fast-repeat>

        <div ng-bind="error"></div>
    </div>

    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.js"></script>
    <script src="https://fb.me/react-0.13.3.js"></script>

    <script type="text/javascript">

        var Comment = React.createClass({
            render: function () {
                var comment = this.props.data;
                return (
                    React.DOM.div(null,
                        React.DOM.div(null, comment.Author),
                            React.DOM.div(null, comment.Text)
                        )
                );
            }
        });

        var CommentList = React.createClass({
            getInitialState: function () {
                return { data: [] };
            },

            render: function () {
                var comments = this.props.data;

                var rows = comments.map(function (comment) {
                    return (
                        React.createElement(Comment, { key:comment.Id, data: comment })
                    );
                });

                return (
                    React.DOM.div(null,
                        rows
                    )
                );
            }
        });

        var app = angular.module('myApp', [])
            .directive('fastRepeat', function () {
                return {
                    restrict: 'E',
                    scope: {
                        data: '='
                    },
                    link: function (scope, el, attrs) {
                        scope.$watchCollection('data', function (newValue, oldValue) {

                            if (oldValue.length === 0 && newValue.length === 0) return;

                            React.render(
                                React.createElement(CommentList, { data: newValue }),
                                el[0]
                            );

                            //$timeout(function () {
                            scope.$emit('fastRepeatFinished');
                            //});
                        });
                    }
                }
            });

        var urlSegments = location.href.split('/');
        var baseUrl = urlSegments[0] + '//' + urlSegments[2];


        app.controller('commentsCtrl', function ($scope, $http) {
            var loadStart = null;

            $scope.framework = 'ReactJs';
            $scope.comments = [];

            $scope.$on('fastRepeatFinished', function (fastRepeatFinishedEvent) {
                $scope.status = "Page loaded in " + ((new Date() - loadStart) / 1000) + " secs.";
            });

            $scope.run = function () {

                loadStart = new Date();

                $scope.totalCommentCount = null;
                $scope.status = "Loading...";
                $scope.error = "";

                $http.get(baseUrl + "/Home/Comments/" + $scope.maxCommentCount)
                    .success(function (response) {
                        $scope.comments = response;
                        $scope.totalCommentCount = response.length;
                        $scope.dataTime = ((new Date() - loadStart) / 1000);
                    })
                    .error(function (response) {
                        $scope.error = response.data;
                        $scope.status = "Page load failed.";
                    });
            };

        });
    </script>
</body>
</html>
